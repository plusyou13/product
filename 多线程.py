import random, threadingimport queue #生产者线程class Producer(threading.Thread):    def __init__(self, name, queue):        threading.Thread.__init__(self, name=name)        self.queue = queue    def run(self):        for i in range(10):             print("%s 生产了 %d \n" % (self.getName(), i))             self.queue.put(i)# 消费者线程class Consumer(threading.Thread):    def __init__(self, name, queue):        threading.Thread.__init__(self, name=name)        self.queue = queue    def run(self):        for i in range(10):            val = self.queue.get()            print("%s 消费了 %d " % (self.getName(), val))            q = queue.Queue(maxsize = 5)if __name__ == '__main__':        producer = Producer('生产者A', q)    consumer = Consumer('消费者B', q)    producer.start()    consumer.start()